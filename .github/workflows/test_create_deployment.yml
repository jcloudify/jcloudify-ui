name: Test create deployment

on:
  workflow_dispatch:
    inputs:
      new_app_id:
        description: "new app id (unique)"
        required: true

  workflow_run:
    workflows: [CI]
    types: [completed]
    branches: [prod]

  schedule:
    - cron: "0 * * * *"

env:
  AWS_REGION: eu-west-3
  REACT_APP_JCLOUDIFY_API_URL: ${{ vars.REACT_APP_JCLOUDIFY_API_URL }}
  CYPRESS_JCLOUDIFY_TEST_USER_TOKEN: ${{ secrets.CYPRESS_JCLOUDIFY_TEST_USER_TOKEN }}

jobs:
  create-deployment:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18.19.0

      ## Connect to Poja Private Codeartifact Repository ##
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - run: sh ./initNpmrc.sh jcloudify-store npm-jcloudify-app 057045785189

      - name: Get/Generate new app ID
        run: |
          app_id=""

          # schedule trigger (timestamp limited to the hour)
          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            app_id=$(date +"%Y-%m-%d_%H")
          fi


          # workflow_dispatch trigger (manual app id)
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            app_id=${{ github.event.inputs.new_app_id }}
          fi

          # workflow_run trigger (last branch commit SHA)
          if [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            app_id=$(git rev-parse HEAD)
          fi

          echo "app_id=$app_id"
          echo "CYPRESS_JCLOUDIFY_TEST_TARGET_APP_ID=$app_id" >> $GITHUB_ENV

      - name: Run create deployment test
        uses: cypress-io/github-action@v6
        with:
          start: npm run dev
          spec: cypress/e2e/app_deployment_it/create_deployment.it.cy.ts
          record: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
